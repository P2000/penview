PenView
=======

PenView (Pendulum Viewer) is the name of an application to visualize and compare data
generated by various experiments conducted during "Praktikum 1" at the end of the third
semester of the Bachelor of Science in Life Sciences Technologies course at the FHNW
University of Applied Sciences in Muttenz, Switzerland. 

Prerequisites
-------------

An Operating System with python (>= 2.6)

- Tested on Ubuntu 10.04
- Windows XP Home
- OS X Tiger

How To Use the Program
----------------------

Feed penview.py to the python interpreter to start PenView.
     ~~~~~~~~~~

File Hierarchy
--------------

penview/
+-- controller.py        # Controller module
+-- data_access.py       # Model: Abstraction for SQLite-Access
+-- data_import.py       # Model: CSV-File Import Module
+-- data_region.py       # View for the right hand side of the UI
+-- dev/                 # files used for development
+-- dialog.py            # file picker dialogs
+-- doc/                 # Documentation Directory
+-- graph_view.py        # View for the Plot region
+-- lib/                 # external and unchanged modules from other Authors
|   +-- __init__.py      # Python Magic - any directory containing a file with this name is a "package"
|   +-- OOoLib.py        # Excel to CSV Conversion Script Library (needs installed OpenOffice to run)
|   +-- ttk.py           # ttk Extends tkinter with a UI Tab function
|   +-- tile0.8.3/       # tile is a tcl/tk extension library needed for ttk.py on the mac (Darwin) platform
+-- model.py             # Model: data structure module
+-- penview.py*          # Main Program (Starting Point)
+-- README               # this file
+-- recipe_52266.py      # MultiListbox Tkinter widget
+-- recipe_52266.py.diff # our changes to the widget
+-- table_view.py        # View for the Table region
+-- tab_region.py        # View for the Tab region / left hand side of the UI
+-- tests/               # Test Code and Example Data
+-- utils/               # Utility Scripts (not all platform independent)
+-- window.py            # Main View (Container for Views)

Coding Conventions
------------------

- Our code follows a mix of the Model-View-Controller- and the Backend/Frontend- paradigms.

- All method names ending in _update are callbacks that are registered as listeners
  with certain objects and are then called by those objects when some properties change.

- Imports are organized as follows:
  - first python standard library modules
  - second additional third party library modules
  - third penview, which is imported in all penview modules
  - fourth individual penview modules
