PenView
=======

PenView (Pendulum Viewer) is the name of an application to visualize and compare data
generated by various experiments conducted during "Praktikum 1" at the end of the third
semester of the Bachelor of Science in Life Sciences Technologies course at the FHNW
University of Applied Sciences in Muttenz, Switzerland. 

Prerequisites
-------------

An Operating System with python (>= 2.6)

- Tested on Ubuntu 10.04
- Windows XP Home
- OS X Tiger

How To Use the Program
----------------------

Execute the file penview.py to startup the PenView.
Or run on a terminal: ~/penview:# python ./penview.py

File Hierarchy
--------------

penview/
+-- controller.py        # Controller module
+-- data_access.py       # Model: Abstraction for SQLite-Access
+-- data_import.py       # Model: CSV-File Import Module
+-- data_region.py       # View for the right hand side of the UI
+-- dev/                 # Directory for mini-spikes
+-- dialog.py            # Wizard Magic! (handles Import of CSV and Opening of Experiment Files) 
+-- doc/                 # Documentation Directory
+-- graph_view.py        # View for the Plot region
+-- lib/                 # external and unchanged modules from other Authors
|   +-- __init__.py      # Python Magic! (converts a directory into a package)
|   +-- OOoLib.py        # Excel to CSV Conversion Script Library (needs installed OpenOffice to run)
|   +-- ttk.py           # ttk Extends tkinter with a UI Tab function
+-- model.py             # Model: Data Structure Module
+-- penview.py*          # Main Program (Starting Point)
+-- README               # this README
+-- recipe_52266.py      # MultiListbox Tkinter widget
+-- recipe_52266.py.diff # our changes to the widget
+-- table_view.py        # View for the Table region
+-- tab_region.py        # View for the Tab region / left hand side of the UI
+-- tests/               # Test Code and Example Data
+-- utils/               # Utility Scripts (not meant to be platform independent
+-- window.py            # Main View (Container for Views)

Coding Conventions
------------------

- Our code follows a mix of the Model-View-Controller- and the Backend/Frontend- paradigms.

- All method names ending in _update are callbacks that are registered as listeners
  with certain objects and are then called by those objects when some properties change.

- Imports are organized as follows:
  - first python standard library modules
  - second additional third party library modules
  - third penview, which is imported in all penview modules
  - fourth individual penview modules



...don't forget you can put links [links](http://www.google.com) in here as well
