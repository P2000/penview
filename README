Directory Structure
-------------------

This is the PenView source code root folder.
.
|-- .git/                # a git repository, holding the complete development history
|-- dev/                 # files used for development
|-- doc/                 # Documentation Directory
|-- lib/                 # external and unchanged modules from other Authors
|-- tests/               # Test Code and Example Data
|-- utils/               # Utility Scripts (not all platform independent)
|-- controller.py        # Controller module
|-- data_access.py       # Model: Abstraction for SQLite-Access
|-- data_import.py       # Model: CSV-File Import Module
|-- data_region.py       # View for the right hand side of the UI
|-- dialog.py            # file picker dialogs
|-- graph_view.py        # View for the Plot region
|-- model.py             # Model: data structure module
|-- penview.py*          # Main Program (Starting Point)
|-- recipe_52266.py      # MultiListbox Tkinter widget
|-- recipe_52266.py.diff # our changes to the widget
|-- table_view.py        # View for the Table region
|-- tab_region.py        # View for the Tab region / left hand side of the UI
`-- window.py            # Main View (Container for Views)

On GIT
------

GIT is a revision control system written by Linus Torvalds.
To learn more about it, please visit the git home page: http://git-scm.org/
We used git intensiveley during the development of this software to syncronize our
coding contributions. Our workflow used to be code > commit > fetch > merge > push > code ...

push and fetch was done to and from a copy of this repository on github.org: https://github.com/P2000/penview

Coding Conventions
------------------

- Our code follows a mix of the Model-View-Controller- and the Backend/Frontend- paradigms.

- All method names ending in _update are callbacks that are registered as listeners
  with certain objects and are then called by those objects when some properties change.

- Imports are organized as follows:
  - first python standard library modules
  - second additional third party library modules
  - third penview, which is imported in all penview modules
  - fourth individual penview modules
